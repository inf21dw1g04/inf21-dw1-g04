openapi: 3.0.0
info:
  title: Biblioteca
  description: M2 - Biblioteca
  contact:
    name: my student id
    email: my.student.email@intitution.country
  version: 0.0.1
servers:
- url: http://localhost:8080
  description: My localhost
  variables:
    basePath:
      default: /
paths:
  /Livros:
    get:
      tags:
      - LivrosController
      summary: Retrieve Livros
      operationId: retrieveLivros
      responses:
        "200":
          description: Array of Livros model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Livros'
                x-content-type: application/json
            application/xml:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: LivrosController
  /Livros/{id}:
    get:
      tags:
      - LivrosController
      summary: Retrieve Livros
      operationId: retrieveLivro
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Retrieve Livros id 1
            value: 1
          two:
            summary: Retrieve Livros id 2
            value: 2
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Livros'
            application/xml:
              schema:
                $ref: '#/components/schemas/Livros'
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: LivrosController
    put:
      tags:
      - LivrosController
      summary: Update Livros
      operationId: updateLivros
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Update Livros id 1
            value: 1
          two:
            summary: Update Livros id 2
            value: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Livros'
            examples:
              LivrosExample01:
                $ref: '#/components/examples/LivrosExample01'
              LivrosExample02:
                $ref: '#/components/examples/LivrosExample02'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Livros PUT success
                x-content-type: application/json
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: LivrosController
  /Editoras:
    get:
      tags:
      - EditorasController
      summary: Retrieve Editoras
      operationId: retrieveEditoras
      responses:
        "200":
          description: Array of Editoras model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Editoras'
                x-content-type: application/json
            application/xml:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: EditorasController
  /Editoras/{id}:
    get:
      tags:
      - EditorasController
      summary: Retrieve Editoras
      operationId: retrieveEditora
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Retrieve Editoras id 1
            value: 1
          two:
            summary: Retrieve Editoras id 2
            value: 2
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Editoras'
            application/xml:
              schema:
                $ref: '#/components/schemas/Editoras'
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: EditorasController
    put:
      tags:
      - EditorasController
      summary: Update Editoras
      operationId: updateEditoras
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Update Editoras id 1
            value: 1
          two:
            summary: Update Editoras id 2
            value: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Editoras'
            examples:
              EditorasExample01:
                $ref: '#/components/examples/EditorasExample01'
              EditorasExample02:
                $ref: '#/components/examples/EditorasExample02'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Editoras PUT success
                x-content-type: application/json
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: EditorasController
  /Autor:
    get:
      tags:
      - AutorController
      summary: Retrieve Autor
      operationId: retrieveAutor
      responses:
        "200":
          description: Array of Autor model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Autor'
                x-content-type: application/json
            application/xml:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
      x-swagger-router-controller: AutorController
  /Autor/{id}{first_name}{last_name}{mail}:
    get:
      tags:
      - AutorController
      summary: Retrieve Autor
      operationId: retrieveAutores
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 5
          type: integer
          format: int64
      - name: first_name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: last_name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mail
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Autor'
            application/xml:
              schema:
                $ref: '#/components/schemas/Autor'
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: AutorController
  /Autor/{fav}:
    get:
      tags:
      - AutorController
      summary: Retrieve Favoritos
      operationId: retrieveFavoritos
      parameters:
      - name: fav
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 2
          type: integer
          format: int64
        examples:
          one:
            summary: Retrieve Livros id 1
            value: 1
          two:
            summary: Retrieve Livros id 2
            value: 2
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Livros'
            application/xml:
              schema:
                $ref: '#/components/schemas/Livros'
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: AutorController
    put:
      tags:
      - AutorController
      summary: Update Favoritos
      operationId: updateFavoritos
      parameters:
      - name: fav
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Update Livros id 1
            value: 1
          two:
            summary: Update Livros id 2
            value: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Livros'
            examples:
              LivrosExample01:
                $ref: '#/components/examples/LivrosExample01'
              LivrosExample02:
                $ref: '#/components/examples/LivrosExample02'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Livros PUT success
                x-content-type: application/json
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: AutorController
    delete:
      tags:
      - AutorController
      summary: Delete Favoritos
      operationId: deleteFavoritos
      parameters:
      - name: fav
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Delete Livros id 1
            value: 1
          two:
            summary: Delete Livros id 2
            value: 2
      responses:
        "204":
          description: No Content
        "404":
          description: id not found
      x-swagger-router-controller: AutorController
components:
  schemas:
    Livros:
      title: Livros
      required:
      - id_livro
      type: object
      properties:
        id_livro:
          type: integer
          format: int64
        titulo:
          type: string
        ano_publicacao:
          type: integer
        id_editora:
          type: integer
        id_autor:
          type: integer

      additionalProperties: false
      example:
        titulo: Hamlet
        ano_publicacao: 1600
        id_editora: 1
        id_autor: 1
        
    Autor:
      title: Autor
      required:
      - id_autor
      type: object
      properties:
        id_autor:
          type: integer
          format: int64
        nome:
          type: string
        nacionalidade:
          type: string
      additionalProperties: false
      example:
        id_autor: 7
        nome: Enid Blyton
        nacionalidade: Inglesa
    
    Editoras:
      title: Editora
      required:
      - id_editora
      type: object
      properties:
        id_editora:
          type: integer
          format: int64
        nome:
          type: string
      additionalProperties: false
      example:
        id_editora: 11
        nome: Soho Press
        
    Utilizadores:
      title: Utilizadores
      required:
      - id_utilizador
      type: object
      properties:
        id_utilizador:
          type: integer
          format: int64
        nome:
          type: string
      additionalProperties: false
      example:
        id_editora: 4
        nome: Luís Macedo
        
    inline_response_200:
      type: object
      properties:
        Lesson:
          type: array
          items:
            $ref: '#/components/schemas/Livros'
      xml:
        name: Livros
    inline_response_200_1:
      type: object
      properties:
        Lesson:
          type: array
          items:
            $ref: '#/components/schemas/Autor'
      xml:
        name: Livros
  examples:
    LivrosExample01:
      value:
        id_livro: 22
        titulo: Beloved
        ano_publicacao: 1939
        id_editora: 22
        id_autor: 22
    LivrosExample02:
      value:
        id_livro: 2
        titulo: Lolita
        ano_publicacao: 1934
        id_editora: 2
        id_autor: 2
    EditorasExample01:
      value:
        id: 23
        nome: Forever
    EditorasExample02:
      value:
        id: 29
        nome: Catapult
        